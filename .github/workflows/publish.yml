name: Publish to NPM

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  # Run full test suite before publishing
  test-before-publish:
    name: Pre-publish Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Run linting
      run: pnpm run lint
    
    - name: Run type checking
      run: pnpm run typecheck
    
    - name: Run tests
      run: pnpm run test:run
    
    - name: Build package
      run: pnpm run build

  # Quality checks
  quality-checks:
    name: Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Check code formatting
      run: pnpm run format:check
    
    - name: Run test coverage
      run: pnpm run test:coverage
    
    - name: Check package integrity
      run: pnpm audit --audit-level=moderate

  # Publish only after all tests pass
  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [test-before-publish, quality-checks]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'pnpm'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build package
      run: pnpm run build
    
    - name: Verify package contents
      run: pnpm pack --dry-run
    
    - name: Publish to NPM
      run: pnpm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Create deployment status
      run: |
        echo "âœ… Package published successfully to NPM"
        echo "ðŸ“¦ Version: $(node -p "require('./package.json').version")"
        echo "ðŸ”— NPM URL: https://www.npmjs.com/package/@loglayer/cflo-transport"
  
  # Publish to GitHub Packages
  publish-github:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest
    needs: [test-before-publish, quality-checks]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://npm.pkg.github.com'
        cache: 'pnpm'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build package
      run: pnpm run build
    
    - name: Configure package for GitHub registry
      run: |
        # Create a copy of package.json for GitHub Packages
        cp package.json package.json.bak
        # Update the package name to include the scope
        node -e "
        const pkg = require('./package.json');
        pkg.name = '@hongkongkiwi/' + pkg.name.split('/').pop();
        pkg.publishConfig = { registry: 'https://npm.pkg.github.com' };
        require('fs').writeFileSync('./package.json', JSON.stringify(pkg, null, 2));
        "
    
    - name: Verify package contents
      run: pnpm pack --dry-run
    
    - name: Publish to GitHub Packages
      run: pnpm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Restore original package.json
      if: always()
      run: |
        if [ -f package.json.bak ]; then
          mv package.json.bak package.json
        fi
    
    - name: Create deployment status
      run: |
        echo "âœ… Package published successfully to GitHub Packages"
        echo "ðŸ“¦ Version: $(node -p "require('./package.json').version")"
        echo "ðŸ”— GitHub Packages URL: https://github.com/hongkongkiwi/loglayer-cflo/packages"