name: Create Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  # Full test suite before creating release
  pre-release-tests:
    name: Pre-release Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Run linting
      run: pnpm run lint
    
    - name: Run type checking
      run: pnpm run typecheck
    
    - name: Run tests
      run: pnpm run test:run
    
    - name: Build package
      run: pnpm run build

  # Quality and security checks
  quality-checks:
    name: Quality & Security Checks
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Check code formatting
      run: pnpm run format:check
    
    - name: Run test coverage
      run: pnpm run test:coverage
    
    - name: Security audit
      run: pnpm audit --audit-level=moderate
    
    - name: Package size check
      run: pnpm pack --dry-run

  # Create release only after all checks pass
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [pre-release-tests, quality-checks]
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Fetch all history for changelog generation
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Build package
      run: pnpm run build
    
    - name: Extract version from tag
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Generate changelog
      id: changelog
      run: |
        # Extract changelog for this version (basic implementation)
        if [ -f CHANGELOG.md ]; then
          # Get changelog section for this version
          sed -n "/## \[${{ steps.version.outputs.version }}\]/,/## \[/p" CHANGELOG.md | sed '$d' > release_notes.md
          
          # If no specific changelog found, create a generic one
          if [ ! -s release_notes.md ]; then
            echo "## Changes in v${{ steps.version.outputs.version }}" > release_notes.md
            echo "" >> release_notes.md
            echo "See [CHANGELOG.md](./CHANGELOG.md) for detailed changes." >> release_notes.md
          fi
        else
          echo "## Release v${{ steps.version.outputs.version }}" > release_notes.md
          echo "" >> release_notes.md
          echo "ðŸš€ New release available!" >> release_notes.md
        fi
    
    - name: Create npm package
      run: pnpm pack
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        name: Release v${{ steps.version.outputs.version }}
        body_path: ./release_notes.md
        draft: false
        prerelease: false
        files: |
          hongkongkiwi-loglayer-cflo-transport-*.tgz
          dist/**/*
        fail_on_unmatched_files: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-artifacts-v${{ steps.version.outputs.version }}
        path: |
          dist/
          hongkongkiwi-loglayer-cflo-transport-*.tgz
          package.json
          README.md
          CHANGELOG.md
          LICENSE
        retention-days: 90