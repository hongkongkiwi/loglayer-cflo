name: Dependabot Auto-merge

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  dependabot:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'pnpm'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Run tests
      run: pnpm run test:run
    
    - name: Run linting
      run: pnpm run lint
    
    - name: Run type checking
      run: pnpm run typecheck
    
    - name: Build package
      run: pnpm run build
    
    - name: Check if PR is ready for auto-merge
      id: check-pr
      run: |
        # Get PR info
        PR_NUMBER=${{ github.event.pull_request.number }}
        
        # Check if this is a patch or minor update (safer for auto-merge)
        if [[ "${{ github.event.pull_request.title }}" =~ ^chore\(deps\): ]]; then
          echo "is_dependency_update=true" >> $GITHUB_OUTPUT
          
          # Check if it's a security update or patch/minor update
          if [[ "${{ github.event.pull_request.title }}" =~ (security|patch|minor) ]] || [[ "${{ github.event.pull_request.body }}" =~ (security|vulnerability) ]]; then
            echo "is_safe_update=true" >> $GITHUB_OUTPUT
          else
            echo "is_safe_update=false" >> $GITHUB_OUTPUT
          fi
        else
          echo "is_dependency_update=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Enable auto-merge for Dependabot PRs
      if: steps.check-pr.outputs.is_dependency_update == 'true' && steps.check-pr.outputs.is_safe_update == 'true'
      run: |
        gh pr merge --auto --squash ${{ github.event.pull_request.number }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Add approval for safe dependency updates
      if: steps.check-pr.outputs.is_dependency_update == 'true' && steps.check-pr.outputs.is_safe_update == 'true'
      run: |
        gh pr review --approve ${{ github.event.pull_request.number }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}